# Investigating probability of making a type I error.
library(CarletonStats)
library(ggplot2)
yawning <- read.csv("yawning.csv")
null_distribution <- permTest(as.numeric(Response == "Yawn") ~ YawnSeed)
null_distribution <- permTest(as.numeric(Response == "Yawn") ~ YawnSeed, data = yawning)
library(dplyr)
yawning %>%
group_by(YawnSeed)
yawning %>%
group_by(YawnSeed) %>%
summarize(prop = sum(Response == "Yawn") / n())
yawning %>%
group_by(YawnSeed) %>%
summarize(prop = sum(Response == "Yawn") / n()) %>%
diff(prop)
yawning %>%
group_by(YawnSeed) %>%
summarize(prop = sum(Response == "Yawn") / n()) %>%
diff(.$prop)
?diff
observed_props <- yawning %>%
group_by(YawnSeed) %>%
summarize(prop = sum(Response == "Yawn") / n()) %>%
diff(observed_props$prop)
observed_props <- yawning %>%
group_by(YawnSeed) %>%
summarize(prop = sum(Response == "Yawn") / n()) %>%
diff(observed_props$prop)
observed_props <- yawning %>%
group_by(YawnSeed) %>%
summarize(prop = sum(Response == "Yawn") / n())
diff(observed_props$prop)
?diff
observed_props$prop
observed_props
diff(observed_props$prop[2:1])
diff(observed_props$prop[2:1]) # to match permTest order
observed <- diff(observed_props$prop[2:1]) # to match permTest order
data.frame(diff = null_distribution) %>%
mutate(less =  diff <= observed)
null_df <- data.frame(diff = null_distribution) %>%
mutate(less =  diff <= observed)
ggplot(data = null_df, mapping = aes(x = diff, fill = factor(less))) +
geom_histogram()
yawning <- read.csv("yawning500.csv")
observed_props <- yawning %>%
group_by(YawnSeed) %>%
summarize(prop = sum(Response == "Yawn") / n())
observed <- diff(observed_props$prop[2:1]) # to match permTest order
null_distribution <- permTest(as.numeric(Response == "Yawn") ~ YawnSeed, data = yawning)
null_df <- data.frame(diff = null_distribution) %>%
mutate(less =  diff <= observed)
ggplot(data = null_df, mapping = aes(x = diff, fill = factor(less))) +
geom_histogram()
yawning <- read.csv("yawning500.csv")
observed_props <- yawning %>%
group_by(YawnSeed) %>%
summarize(prop = sum(Response == "Yawn") / n())
observed <- diff(observed_props$prop[2:1]) # to match permTest order
null_distribution <- permTest(as.numeric(Response == "Yawn") ~ YawnSeed, data = yawning)
null_df <- data.frame(diff = null_distribution) %>%
mutate(less =  diff <= observed)
ggplot(data = null_df, mapping = aes(x = diff, fill = factor(less))) +
geom_histogram()
ggplot(data = null_df, mapping = aes(x = diff)) +
geom_histogram()
ggplot(data = null_df, mapping = aes(x = diff)) +
geom_dotplot()
ggplot(data = null_df, mapping = aes(x = diff)) +
geom_dotplot(binwidth=0.05)
ggplot(data = null_df, mapping = aes(x = diff)) +
geom_dotplot(binwidth=0.005)
ggplot(data = null_df, mapping = aes(x = diff)) +
geom_dotplot(binwidth=0.001)
ggplot(data = null_df, mapping = aes(x = diff)) +
geom_dotplot(binwidth=0.0005)
ggplot(data = null_df, mapping = aes(x = diff)) +
geom_dotplot(binwidth=0.0005)
ggplot(data = null_df, mapping = aes(x = diff)) +
geom_dotplot(binwidth=0.0005) +
ylim(0, 2)
ggplot(data = null_df, mapping = aes(x = diff)) +
geom_dotplot(binwidth=0.0005) +
ylim(0, 100)
ggplot(data = null_df, mapping = aes(x = diff)) +
geom_dotplot(binwidth=0.005) +
ylim(0, 100)
ggplot(data = null_df, mapping = aes(x = diff)) +
geom_dotplot(binwidth=0.0008) +
ylim(0, 100)
library(openintro)
library(dplyr)
library(xtable)
library(ggplot2)
# load data ---------------------------------------------------------
d = read.csv("teach_stu_rat.csv")
# format data -------------------------------------------------------
# round student-faculty ratio
# relabel public / private
d$rat = round(d$studentfacultyratio, 2)
d$type[d$Private == 1] = "private"
d$type[d$Private == 0] = "public"
d$type = factor(d$type, levels = c("private", "public"))
# summary stats -----------------------------------------------------
sum_tab <- d %>%
group_by(type) %>%
summarize(min = round(min(rat), 2),
Q1 = round(quantile(rat, .25), 2),
median = round(median(rat), 2),
Q3 = round(quantile(rat, .75), 2),
max = round(max(rat), 2),
mean = round(mean(rat), 2),
SD = round(sd(rat), 2), n = n())
print(xtable(sum_tab), include.rownames = FALSE)
library(CarletonStats)
set.seed(9221632)
perm_dist <- permTest(rat ~ type, data = d)
rand_dist_dot <- ggplot(data = data.frame(x = perm_dist), aes(x = x)) +
geom_histogram(binwidth = 0.1, fill = "steelblue") +
xlab("Distribution of simulated differences (public - private)") +
geom_vline(xintercept = c(-3.75535, 3.75535)) +
scale_x_continuous(limits = c(-5, 5), breaks = seq(-5, 5, 1)) +
theme_bw()
rand_dist_dot
sfratio_df <- read.csv("teach_stu_rat.csv")
str(sfratio)
str(sfratio_df)
sfratio_df <- read.csv("teach_stu_rat.csv")
sfratio_df$rat = round(d$studentfacultyratio, 2)
sfratio_df$type[d$Private == 1] = "private"
sfratio_df$type[d$Private == 0] = "public"
sfratio_df$type = factor(d$type, levels = c("private", "public"))
head(sfratio_df)
perm_dist <- permTest(rat ~ type, data = sfratio_df)
sfratio_df %>%
group_by(type) %>%
summarize(mean = mean(rat))
sfratio_df %>%
group_by(type) %>%
summarize(mean = mean(rat)) %>%
arrange(desc(type))
diff(observed_diff$mean)
observed_diff <- sfratio_df %>%
group_by(type) %>%
summarize(mean = mean(rat)) %>%
arrange(desc(type))
diff(observed_diff$mean)
ggplot(data = data.frame(x = null_distribution), aes(x = x)) +
geom_histogram(binwidth = 0.1, fill = "steelblue") +
xlab("Distribution of simulated differences (public - private)") +
geom_vline(xintercept = c(-3.75535, 3.75535)) +
scale_x_continuous(limits = c(-5, 5), breaks = seq(-5, 5, 1)) +
theme_bw()
ggplot(data = data.frame(x = null_distribution), aes(x = x)) +
geom_histogram(binwidth = 0.1, fill = "steelblue") +
xlab("Distribution of simulated differences (public - private)") +
theme_bw()
ggplot(data = data.frame(x = null_distribution), aes(x = x)) +
geom_histogram(binwidth = 0.01, fill = "steelblue") +
xlab("Distribution of simulated differences (public - private)") +
theme_bw()
ggplot(data = data.frame(x = null_distribution), aes(x = x)) +
geom_histogram(binwidth = 0.005, fill = "steelblue") +
xlab("Distribution of simulated differences (public - private)") +
theme_bw()
null_distribution <- permTest(rat ~ type, data = sfratio_df)
ggplot(data = data.frame(x = null_distribution), aes(x = x)) +
geom_histogram(binwidth = 0.005, fill = "steelblue") +
xlab("Distribution of simulated differences (public - private)") +
theme_bw()
ggplot(data = data.frame(x = null_distribution), aes(x = x)) +
geom_histogram(binwidth = 1, fill = "steelblue") +
xlab("Distribution of simulated differences (public - private)") +
theme_bw()
ggplot(data = data.frame(x = null_distribution), aes(x = x)) +
geom_histogram(binwidth = .1, fill = "steelblue") +
xlab("Distribution of simulated differences (public - private)") +
theme_bw()
observed <- diff(observed_diff$mean)
null_df <- data.frame(diff = null_distribution) %>%
mutate(less =  diff <= observed)
ggplot(data = data.frame(x = null_distribution, fill = less)) +
geom_histogram(binwidth = .1, fill = "steelblue") +
xlab("Distribution of simulated differences") +
theme_bw()
null_df <- data.frame(diff = null_distribution) %>%
mutate(less =  diff <= observed)
ggplot(data = data.frame(x = null_distribution, fill = less)) +
geom_histogram(binwidth = .1, fill = "steelblue") +
xlab("Distribution of simulated differences") +
theme_bw()
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1, fill = "steelblue") +
xlab("Distribution of simulated differences") +
theme_bw()
null_df <- data.frame(diff = null_distribution) %>%
mutate(less =  diff <= quantile(diff, .1))
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1, fill = "steelblue") +
xlab("Distribution of simulated differences") +
theme_bw()
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
theme_bw()
library(viridis)
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw()
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(paste("Using", expression(alpha = 0.1)))
expression(paste, alpha = 0.1, "1")
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression(alpha = 0.1))
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression("alpha = 0.1"))
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(paste(expression(alpha), 0.01))
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(paste(expression(alpha=), 0.01))
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(paste(expression(alpha =), 0.01))
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression("Using " alpha = 0.1))
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression("Using " alpha "= 0.1"))
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression("Using "alpha"= 0.1"))
expression("Using "alpha"= 0.1")
expression(alpha"= 0.1")
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression(alpha "= 0.1")
expression(paste("Using ",alpha,"= 0.1"))
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression(paste("Using ",alpha,"= 0.1")))
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression(paste("Using ",alpha=,"= 0.1")))
ggplot(data = null_df, mapping = aes(x = diff, fill = less)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression(paste("Using ",alpha,"= 0.1")))
ggplot(data = null_df, mapping = aes(x = diff, fill = alpha.05)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression(paste("Using ",alpha,"= 0.05")))
null_df <- data.frame(diff = null_distribution) %>%
mutate(alpha.1 =  diff <= quantile(diff, .1),
alpha.05 =  diff <= quantile(diff, .05))
ggplot(data = null_df, mapping = aes(x = diff, fill = alpha.05)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression(paste("Using ",alpha,"= 0.05")))
ggplot(data = null_df, mapping = aes(x = diff, fill = alpha.1)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression(paste("Using ",alpha,"= 0.1"))) +
theme(legend.position="none")
ggplot(data = null_df, mapping = aes(x = diff, fill = alpha.05)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression(paste("Using ",alpha,"= 0.05"))) +
theme(legend.position="none")
rand_dist_hist1 <- ggplot(data = null_df, mapping = aes(x = diff, fill = alpha.1)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression(paste("Using ",alpha,"= 0.1"))) +
theme(legend.position="none")
rand_dist_hist2 <- ggplot(data = null_df, mapping = aes(x = diff, fill = alpha.05)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_bw() +
ggtitle(expression(paste("Using ",alpha,"= 0.05"))) +
theme(legend.position="none")
library(ggthemes)
ggplot(data = null_df, mapping = aes(x = diff, fill = alpha.1)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_minimal() +
ggtitle(expression(paste("Using ",alpha,"= 0.1"))) +
theme(legend.position="none")
rand_dist_hist1 <- ggplot(data = null_df, mapping = aes(x = diff, fill = alpha.1)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_minimal() +
ggtitle(expression(paste("Using ",alpha,"= 0.1"))) +
theme(legend.position="none")
rand_dist_hist2 <- ggplot(data = null_df, mapping = aes(x = diff, fill = alpha.05)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_minimal() +
ggtitle(expression(paste("Using ",alpha,"= 0.05"))) +
theme(legend.position="none")
ggsave(rand_dist_hist1, file = "rand_dist_hist1.pdf", width = 5, height = 3)
ggsave(rand_dist_hist2, file = "rand_dist_hist2.pdf", width = 5, height = 3)
null_df <- data.frame(diff = null_distribution) %>%
mutate(alpha.1 =  diff <= quantile(diff, .1),
alpha.05 =  diff <= quantile(diff, .05),
alpha.01 =  diff <= quantile(diff, .01))
rand_dist_hist1 <- ggplot(data = null_df, mapping = aes(x = diff, fill = alpha.1)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_minimal() +
ggtitle(expression(paste("Using ",alpha,"= 0.1"))) +
theme(legend.position="none")
rand_dist_hist2 <- ggplot(data = null_df, mapping = aes(x = diff, fill = alpha.05)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_minimal() +
ggtitle(expression(paste("Using ",alpha,"= 0.05"))) +
theme(legend.position="none")
rand_dist_hist3 <- ggplot(data = null_df, mapping = aes(x = diff, fill = alpha.01)) +
geom_histogram(binwidth = .1) +
xlab("Distribution of simulated differences") +
scale_fill_viridis(discrete = TRUE) +
theme_minimal() +
ggtitle(expression(paste("Using ",alpha,"= 0.01"))) +
theme(legend.position="none")
ggsave(rand_dist_hist3, file = "rand_dist_hist3.pdf", width = 5, height = 3)
