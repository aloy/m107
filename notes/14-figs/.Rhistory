library(ggplot2)
library(dplyr)
library(resampledata)
library(CarletonStats)
library(viridis)
library(resample)
normal_dsn <-
ggplot(data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm) +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(y = "density")
normal_dsn
normal_prob_area_plot <- function(lb, ub, mean = 0, sd = 1, limits = c(mean - 3 * sd, mean + 3 * sd)) {
x <- seq(limits[1], limits[2], length.out = 100)
xmin <- max(lb, limits[1])
xmax <- min(ub, limits[2])
areax <- seq(xmin, xmax, length.out = 100)
area <- data.frame(x = areax, ymin = 0, ymax = dnorm(areax, mean = mean, sd = sd))
(ggplot() +
geom_line(data.frame(x = x, y = dnorm(x, mean = mean, sd = sd)), mapping = aes(x = x, y = y)) +
geom_ribbon(data = area, mapping = aes(x = x, ymin = ymin, ymax = ymax, alpha = 0.2)) +
scale_x_continuous(limits = limits) +
theme_minimal() +
labs(x = "Z", y = "density"))
}
normal_prob_area_plot(-Inf, 1.71)
### QUANTILES
x <- seq(-3, 3, length.out = 100)
xmin <- max(-Inf, -3)
xmax <- min(2, 3)
areax <- seq(xmin, xmax, length.out = 100)
area <- data.frame(x = areax, ymin = 0, ymax = dnorm(areax))
qnorm_sketch <-
ggplot() +
geom_line(data.frame(x = x, y = dnorm(x)), mapping = aes(x = x, y = y)) +
geom_ribbon(data = area, mapping = aes(x = x, ymin = ymin, ymax = ymax)) +
scale_x_continuous(limits = c(-3,3)) +
theme_minimal() +
labs(x = "Z", y = "density") +
annotate("text", x = 0, y = 0.15, label = "p", size = 14, color = "white") +
# geom_segment(aes(x = 2, y = dnorm(2), xend = 2, yend = 0.1)) +
annotate("text", x = 2, y = 0.06, label = "?", size = 10, vjust = -.5)
qnorm_sketch
qnorm(.95)
normal_prob_area_plot <- function(lb, ub, mean = 0, sd = 1, limits = c(mean - 3 * sd, mean + 3 * sd)) {
x <- seq(limits[1], limits[2], length.out = 100)
xmin <- max(lb, limits[1])
xmax <- min(ub, limits[2])
areax <- seq(xmin, xmax, length.out = 100)
area <- data.frame(x = areax, ymin = 0, ymax = dnorm(areax, mean = mean, sd = sd))
(ggplot() +
geom_line(data.frame(x = x, y = dnorm(x, mean = mean, sd = sd)), mapping = aes(x = x, y = y)) +
geom_ribbon(data = area, mapping = aes(x = x, ymin = ymin, ymax = ymax)) +
scale_x_continuous(limits = limits) +
theme_minimal() +
labs(x = "Z", y = "density"))
}
normal_prob_area_plot(-Inf, 1.71)
normal_prob_area_plot(-1.96, 1.96)
normal_prob_area_plot(-1.96, 1.96) +
annotate("text", x = 0, y = 0.15, label = "p", size = 14, color = "white") +
normal_prob_area_plot(-1.96, 1.96) +
annotate("text", x = 0, y = 0.15, label = "p", size = 14, color = "white")
normal_prob_area_plot(-1.96, 1.96) +
annotate("text", x = 0, y = 0.15, label = expression(1-alpha), size = 14, color = "white")
normal_prob_area_plot(-1.96, 1.96) +
annotate("text", x = 0, y = 0.15, label = paste("1-alpha"), size = 14, color = "white")
normal_prob_area_plot(-1.96, 1.96) +
annotate("text", x = 0, y = 0.15, label = paste("1-", expression(alpha)), size = 14, color = "white")
normal_prob_area_plot(-1.96, 1.96) +
annotate("text", x = 0, y = 0.15, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE)
normal_prob_area_plot(-1.96, 1.96) +
annotate("text", x = 0, y = 0.15, label = expression(1-alpha), size = 14, color = "white", parse = TRUE)
normal_prob_area_plot(-1.96, 1.96) +
annotate("text", x = 0, y = 0.15, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE)
normal_prob_area_plot(-1.96, 1.96) +
annotate("text", x = 0, y = 0.15, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
qnorm_sketch
normal_prob_area_plot(-1.96, 1.96) +
annotate("text", x = 0, y = 0.15, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE) +
annotate("text", x = 1.96, y = 0.06, label = "?", size = 10, vjust = -.5) +
annotate("text", x = -1.96, y = 0.06, label = "?", size = 10, vjust = -.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
normal_prob_area_plot(-1.96, 1.96) +
annotate("text", x = 0, y = 0.15, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
critical_values <-
normal_prob_area_plot(-1.96, 1.96) +
annotate("text", x = 0, y = 0.15, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggsave(critical_values, file = "critical values.pdf", width = 5, height = 3)
ggsave(critical_values, file = "critical_values.pdf", width = 5, height = 3)
library(Lock5Data)
Lock5Data::
?Lock5Data
data("WeekdaySleep")
data("WeekdaySleep", package="Lock5Data")
?data
data(package="Lock5Data")
data(package="Lock5Data", "SleepStudy")
mean(SleepStudy$WeekdaySleep)
sd(SleepStudy$WeekdaySleep)
data(package="Lock5Data", "CommuteAtlanta")
ggplot(data = CommuteAtlanta, mapping = aes(x = Time)) +
geom_histogram() +
theme_minimal()
ggplot(data = CommuteAtlanta, mapping = aes(x = Time)) +
geom_histogram(color = "steelblue") +
theme_minimal()
ggplot(data = CommuteAtlanta, mapping = aes(x = Time)) +
geom_histogram(fill = "steelblue") +
theme_minimal()
ggplot(data = CommuteAtlanta, mapping = aes(x = Time)) +
geom_histogram(fill = "steelblue") +
theme_minimal() +
labs(x = "Time (minutes)")
ggplot(data = SleepStudy, mapping = aes(x = WeekdaySleep)) +
geom_histogram(fill = "steelblue") +
theme_minimal()
ggplot(data = SleepStudy, mapping = aes(x = WeekdaySleep)) +
geom_histogram(fill = "steelblue") +
theme_minimal() +
labs(x = "Avg. weekday hours of sleep")
commute_atlanta <-
ggplot(data = CommuteAtlanta, mapping = aes(x = Time)) +
geom_histogram(fill = "steelblue") +
theme_minimal() +
labs(x = "Time (minutes)")
ggsave(commute_atlanta, file = "commute_atlanta_histogram.pdf", width = 5, height = 3)
sleep_histogram <-
ggplot(data = SleepStudy, mapping = aes(x = WeekdaySleep)) +
geom_histogram(fill = "steelblue") +
theme_minimal() +
labs(x = "Avg. weekday hours of sleep")
sleep_histogram <-
ggplot(data = SleepStudy, mapping = aes(x = WeekdaySleep)) +
geom_histogram(fill = "steelblue") +
theme_minimal() +
labs(x = "Avg. weekday hours of sleep")
ggsave(sleep_histogram, file = "sleep_histogram.pdf", width = 5, height = 3)
t_prob_area_plot <- function(lb, ub, df = 2, limits = c(-3, 3)) {
x <- seq(limits[1], limits[2], length.out = 100)
xmin <- max(lb, limits[1])
xmax <- min(ub, limits[2])
areax <- seq(xmin, xmax, length.out = 100)
area <- data.frame(x = areax, ymin = 0, ymax = dt(areax, df = df))
(ggplot() +
geom_line(data.frame(x = x, y = dt(x, df = df)), mapping = aes(x = x, y = y)) +
geom_ribbon(data = area, mapping = aes(x = x, ymin = ymin, ymax = ymax)) +
scale_x_continuous(limits = limits) +
theme_minimal() +
labs(x = "T", y = "density"))
}
library(ggplot2)
library(dplyr)
library(resampledata)
library(CarletonStats)
library(viridis)
library(resample)
t_prob_area_plot(-Inf, -2) +
annotate("text", x = 0, y = 0.15, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
t_prob_area_plot <- function(lb, ub, df = 2, limits = c(-4, 4)) {
x <- seq(limits[1], limits[2], length.out = 100)
xmin <- max(lb, limits[1])
xmax <- min(ub, limits[2])
areax <- seq(xmin, xmax, length.out = 100)
area <- data.frame(x = areax, ymin = 0, ymax = dt(areax, df = df))
(ggplot() +
geom_line(data.frame(x = x, y = dt(x, df = df)), mapping = aes(x = x, y = y)) +
geom_ribbon(data = area, mapping = aes(x = x, ymin = ymin, ymax = ymax)) +
scale_x_continuous(limits = limits) +
theme_minimal() +
labs(x = "T", y = "density"))
}
t_prob_area_plot(-Inf, -2) +
annotate("text", x = 0, y = 0.15, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
t_prob_area_plot <- function(lb, ub, df = 2, limits = c(-5, 5)) {
x <- seq(limits[1], limits[2], length.out = 100)
xmin <- max(lb, limits[1])
xmax <- min(ub, limits[2])
areax <- seq(xmin, xmax, length.out = 100)
area <- data.frame(x = areax, ymin = 0, ymax = dt(areax, df = df))
(ggplot() +
geom_line(data.frame(x = x, y = dt(x, df = df)), mapping = aes(x = x, y = y)) +
geom_ribbon(data = area, mapping = aes(x = x, ymin = ymin, ymax = ymax)) +
scale_x_continuous(limits = limits) +
theme_minimal() +
labs(x = "T", y = "density"))
}
t_prob_area_plot(-Inf, -2) +
annotate("text", x = 0, y = 0.15, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
t_prob_area_plot <- function(lb, ub, df = 2, limits = c(-4.5, 4.5)) {
x <- seq(limits[1], limits[2], length.out = 100)
xmin <- max(lb, limits[1])
xmax <- min(ub, limits[2])
areax <- seq(xmin, xmax, length.out = 100)
area <- data.frame(x = areax, ymin = 0, ymax = dt(areax, df = df))
(ggplot() +
geom_line(data.frame(x = x, y = dt(x, df = df)), mapping = aes(x = x, y = y)) +
geom_ribbon(data = area, mapping = aes(x = x, ymin = ymin, ymax = ymax)) +
scale_x_continuous(limits = limits) +
theme_minimal() +
labs(x = "T", y = "density"))
}
t_prob_area_plot(-Inf, -2) +
annotate("text", x = 0, y = 0.15, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
t_prob_area_plot(2, Inf) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
lower_pvalue <-
t_prob_area_plot(-Inf, -2) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggsave(lower_pvalue, file = "lower_pvalue.pdf", width = 5, height = 3)
upper_pvalue <-
t_prob_area_plot(2, Inf) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggsave(upper_pvalue, file = "upper_pvalue.pdf", width = 5, height = 3)
t_prob_area_plot(-Inf, -2) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
lower_pvalue <-
t_prob_area_plot(-Inf, -2) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ggtitle("pt(q, df)")
ggsave(lower_pvalue, file = "lower_pvalue.pdf", width = 5, height = 3)
upper_pvalue <-
t_prob_area_plot(2, Inf) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ggtitle("1 - pt(q, df)")
ggsave(upper_pvalue, file = "upper_pvalue.pdf", width = 5, height = 3)
library(Lock5Data)
library(Lock5Data)
data(package="Lock5Data", "SleepStudy")
t.test(~WeekdaySleep, data = SleepStudy)
library(mosaic)
t.test(~WeekdaySleep, data = SleepStudy)
?t.test
t.test(~WeekdaySleep, data = SleepStudy, alternative = "less")
j <- 	t.test(~WeekdaySleep, data = SleepStudy, alternative = "less")
j$statistic
t.test(~WeekdaySleep, data = SleepStudy, mu = 8, alternative = "less")
library(Lock5Data)
data(package="Lock5Data", "SleepStudy")
library(mosaic)
t.test(~WeekdaySleep, data = SleepStudy, )
t_prob_area_plot <- function(lb, ub, df = 2, limits = c(-4.5, 4.5)) {
x <- seq(limits[1], limits[2], length.out = 100)
xmin <- max(lb, limits[1])
xmax <- min(ub, limits[2])
areax <- seq(xmin, xmax, length.out = 100)
area <- data.frame(x = areax, ymin = 0, ymax = dt(areax, df = df))
(ggplot() +
geom_line(data.frame(x = x, y = dt(x, df = df)), mapping = aes(x = x, y = y)) +
geom_ribbon(data = area, mapping = aes(x = x, ymin = ymin, ymax = ymax)) +
scale_x_continuous(limits = limits) +
theme_minimal() +
labs(x = "T", y = "density"))
}
library(ggplot2)
library(dplyr)
library(resampledata)
library(CarletonStats)
library(viridis)
library(resample)
t_prob_area_plot(-2.16, 2.16) +
annotate("text", x = 0, y = 0.15, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
t_prob_area_plot(-2.16, 2.16) +
annotate("text", x = 0, y = 0.1, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
critical_values <-
t_prob_area_plot(-2.16, 2.16) +
annotate("text", x = 0, y = 0.1, label = paste("1 -", expression(alpha)), size = 14, color = "white", parse = TRUE) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggsave(critical_values, file = "critical_values.pdf", width = 5, height = 3)
